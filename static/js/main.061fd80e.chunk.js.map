{"version":3,"sources":["actions/postsAction.js","reducers/postsReducer.js","reducers/infoPostReducer.js","reducers/index.js","actions/infoPostAction.js","components/Navbar.js","components/theme.js","components/MediaCard.js","pages/BodyPage.js","components/Error.js","components/Contact.js","pages/PostPage.js","components/Error404.js","App.js","serviceWorker.js","index.js"],"names":["getPostsSuccess","posts","type","payload","initialState","loading","hasErrors","info","rootReducer","combineReducers","state","action","navBarStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Navbar","handleChange","classes","React","useState","anchorEl","setAnchorEl","handleClose","className","AppBar","Toolbar","IconButton","edge","aria-label","onClick","e","currentTarget","id","keepMounted","open","Boolean","onClose","MenuItem","to","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","name","value","onChange","createMuiTheme","primary","main","red","useStyles","maxWidth","textTransform","margin","media","MediaCard","post","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","component","CardActions","Button","size","gridItem","textAlign","connect","dispatch","filteredPosts","setFilteredPosts","nextPage","setNextPage","useEffect","a","fetch","response","json","data","Promise","all","results","map","item","url","result","resultJson","sprites","front_default","dataWithImage","filter","toLowerCase","includes","fetchCharacters","concat","console","log","Grid","container","xs","directon","justify","grid","style","fontSize","length","key","fullWidth","marginBottom","Error","mensaje","formStyles","form","borderColor","Contact","email","message","setData","error","setError","target","onSubmit","preventDefault","trim","TextField","label","autoFocus","multiline","submit","header","content","marginTop","useParams","weight","order","values","origin","push","fetchInfoPosts","src","alt","renderInfoPosts","Error404","setSearch","ThemeProvider","limit","filterResult","exact","path","children","window","location","hostname","match","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.061fd80e.chunk.js","sourcesContent":["// Creo las \"actions types\"\nexport const GET_POSTS = \"GET_POSTS\";\nexport const GET_POSTS_SUCCESS = \"GET_POSTS_SUCCESS\";\nexport const GET_POSTS_FAILURE = \"GET_POSTS_FAILURE\";\n\n// Creo las \"actions creators\" que retornen una accion.\n// Son funciones que crean acciones.\nexport const getPosts = () => ({\n  type: GET_POSTS,\n});\n\nexport const getPostsSuccess = (posts) => ({\n  type: GET_POSTS_SUCCESS,\n  payload: posts,\n});\n\nexport const getPostsFailure = () => ({\n  type: GET_POSTS_FAILURE,\n});\n\n// Despacho.\n//Consumiendo una API desde determinado componente en un useEffect. (se ejecuta primero)\nexport function fetchPosts() {\n  return async (dispatch) => {\n    dispatch(getPosts());\n\n    try {\n      const response = await fetch(\n        \n        `https://pokeapi.co/api/v2/pokemon/?limit=20&offset=0`\n        \n      );\n      const data = await response.json();\n      const dataWithImage = await Promise.all( data.results.map(async item => {\n      const result = await fetch(item.url)\n      const resultJson= await result.json()\n           \n      return {    name: item.name,     image: resultJson.sprites.front_default   } }))\n\n           \n           dispatch(getPostsSuccess(dataWithImage));\n      \n    } catch (error) {\n      dispatch(getPostsFailure());\n    }\n  };\n}\n\n\nexport function fetchPostsByName(name) {\n  return async (dispatch) => {\n    dispatch(getPosts());\nconst limit = name== \"\"? 20 : 151\n    try {\n      const response = await fetch(\n        \n        `https://pokeapi.co/api/v2/pokemon?limit=${limit}`\n        \n      );\n      const data = await response.json();\n      const dataWithImage = await Promise.all( data.results.map(async item => {\n      const result = await fetch(item.url)\n      const resultJson= await result.json()\n           \n      return {    name: item.name,     image: resultJson.sprites.front_default   } }))\n        const filterResult = dataWithImage.filter(item => item.name.includes(name))\n           \n           dispatch(getPostsSuccess(filterResult));\n      \n    } catch (error) {\n      dispatch(getPostsFailure());\n    }\n  };\n}\n","// Inicializo lo que voy a consumir (en este caso los post de la API)\n// API: https://jsonplaceholder.typicode.com/posts\n/*\n-Actualizan el estado de acuerdo a las acciones.-\n\nUn reducers es una función que toma dos\nparámetros: \"state\" y \"action\". \nGeneralmente va a consistir en una declaración switch\nque pasa por todos los tipos de acción\nposibles.\n*/\n\n// Importo las actions\nimport * as actions from \"../actions/postsAction\";\n\n// Creo un objeto como estado\nexport const initialState = {\n  posts: [],\n  loading: false,\n  hasErrors: false,\n};\n\n// Funcion reducer\nexport default function postsReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.GET_POSTS:\n      return { ...state, loading: true };\n    case actions.GET_POSTS_SUCCESS:\n      return { posts: action.payload, loading: false, hasErrors: false };\n    case actions.GET_POSTS_FAILURE:\n      return { ...state, loading: false, hasErrors: true };\n    default:\n      return state;\n  }\n}\n","import * as actions from \"../actions/infoPostAction\";\n\nexport const initialState = {\n  info: [],\n  loading: false,\n  hasErrors: false,\n};\n\nexport default function infoPostReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.GET_INFO:\n      return { ...state, loading: true };\n    case actions.GET_INFO_SUCCESS:\n      return { info: action.payload, loading: false, hasErrors: false };\n    case actions.GET_INFO_FAILURE:\n      return { ...state, loading: false, hasErrors: true };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n// Por cada dato que traigo hago un archivo especifico\nimport postsReducer from \"./postsReducer\";\nimport infoPostReducer from \"./infoPostReducer\";\n\nconst rootReducer = combineReducers({\n  posts: postsReducer,\n  info: infoPostReducer,\n});\n\nexport default rootReducer;\n","export const GET_INFO = \"GET_INFO\";\nexport const GET_INFO_SUCCESS = \"GET_INFO_SUCCESS\";\nexport const GET_INFO_FAILURE = \"GET_INFO_FAILURE\";\n\nexport const getInfoPosts = () => ({\n  type: GET_INFO,\n});\n\nexport const getInfoPostsSuccess = (info) => ({\n  type: GET_INFO_SUCCESS,\n  payload: info,\n});\n\nexport const getInfoPostsFailure = () => ({\n  type: GET_INFO_FAILURE,\n});\n\nexport function fetchInfoPosts(name) {\n  return async (dispatch) => {\n    dispatch(getInfoPosts());\n\n    try {\n      const response = await fetch(\n        `https://pokeapi.co/api/v2/pokemon/${name}`\n       \n      );\n      const data = await response.json();\n      dispatch(getInfoPostsSuccess(data));\n    } catch (error) {\n      dispatch(getInfoPostsFailure());\n    }\n  };\n}\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Link } from \"react-router-dom\";\n\nconst navBarStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nconst Navbar = ({ handleChange, search }) => {\n  const classes = navBarStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <>\n              <MenuIcon onClick={handleClick} />\n              <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>\n                  <Link to=\"/\">Inicio</Link>\n                </MenuItem>\n                <MenuItem onClick={handleClose}>\n                  <Link to=\"/contact\">Contacto</Link>\n                </MenuItem>\n              </Menu>\n            </>\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Pokedex\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Bucar...\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n              name=\"search\"\n              value={search}\n              onChange={handleChange}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport red from \"@material-ui/core/colors/red\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: red['A400'],\n    },\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    \"& .MuiTypography-gutterBottom\": {\n      textTransform: \"uppercase\",\n    },\n    margin: \"0 auto\",\n  },\n  media: {\n    height: 160,\n  },\n});\n\nfunction MediaCard({ post }) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={post.image}\n          title=\"Contemplative Pokemons\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {post.name}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        \n        <Link to={`/${post.name}`}>\n          <Button size=\"small\" color=\"primary\" variant=\"contained\">\n            Leer más...\n          </Button>\n        </Link>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default MediaCard;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MediaCard from \"../components/MediaCard\";\nimport Button from \"@material-ui/core/Button\";\n// Conectar mi componente con la store\nimport { connect } from \"react-redux\";\n// Traigo los datos de la API\nimport { fetchPosts } from \"../actions/postsAction\";\n\n\nconst useStyles = makeStyles({\n  root: {\n    margin: \"40px auto 0 auto\",\n    width: \"80%\",\n  },\n  gridItem: {\n    margin: \"15px\",\n    width: \"500px\",\n    height: \"500px\",\n  },\n  title: {\n    color: \"white\",\n    textAlign: \"center\",\n  },\n});\n\nconst BodyPage = ({ dispatch, posts, loading, hasErrors, search }) => {\n  const classes = useStyles();\n\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [nextPage, setNextPage] = useState(1);\n\n  // Datos del store\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  // Escucho cambios en \"search\" y \"Posts\"\n  useEffect(() => {\n    setFilteredPosts(\n      posts.filter((post) => {\n        return post.name.toLowerCase().includes(search.toLowerCase());\n      })\n    );\n  }, [search, posts]);\n\n  // UseEffect para la siguiente pagina\n  useEffect(() => {\n    fetchCharacters();\n  }, []);\n\n  const fetchCharacters = async () => {\n    try {\n      // Respuesta\n      const response = await fetch(\n        `https://pokeapi.co/api/v2/pokemon/?limit=20&offset=${20*nextPage}`\n        \n      );\n      \n      const data = await response.json();\n      const dataWithImage = await Promise.all( data.results.map(async item => {\n      const result = await fetch(item.url)\n      const resultJson= await result.json()\n           \n      return {    name: item.name,     image: resultJson.sprites.front_default   } }))\n\n\n      setNextPage(nextPage + 1);\n      setFilteredPosts([].concat(filteredPosts, dataWithImage));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const renderPosts = () => {\n    if (loading)\n      return (\n        <p style={{ color: \"white\", fontSize: \"2rem\" }}>Cargando posts...</p>\n      );\n    if (hasErrors)\n      return <p style={{ color: \"white\" }}>Posts no disponibles...</p>;\n\n    return filteredPosts.length === 0 ? (\n      <p style={{ color: \"white\", fontSize: \"2rem\" }}>\n        No se encontraron resultados...\n      </p>\n    ) : (\n      filteredPosts.map((post) => (\n        <Grid item className={classes.gridItem} key={post.id}>\n          <MediaCard post={post} />\n        </Grid>\n      ))\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid>\n        <h1 className={classes.title}>Posts</h1>\n      </Grid>\n      <Grid\n        container\n        item xs={12} spacing={3}\n        directon=\"row\" \n        justify=\"space-evenly\"\n        alignItems=\"center\"\n        className={classes.grid}\n      >\n        {renderPosts()}\n      </Grid>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        fullWidth\n        onClick={fetchCharacters}\n        style={{ marginBottom: \"10px\" }}\n      >\n        Cargar más\n      </Button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.posts.loading,\n  posts: state.posts.posts,\n  hasErrors: state.posts.hasErrors,\n});\n\nexport default connect(mapStateToProps)(BodyPage);\n","import React from \"react\";\n\nconst Error = ({ mensaje }) => {\n  return <span className=\"error\">{mensaje}</span>;\n};\n\nexport default Error;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport Error from \"./Error.js\";\n\nconst formStyles = makeStyles({\n  root: {\n    width: \"40%\",\n    margin: \"0 auto\",\n  },\n  form: {\n    \"& .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"white\",\n    },\n    \"& .MuiInputLabel-outlined\": {\n      color: \"white\",\n    },\n    \"& .MuiOutlinedInput-input\": {\n      color: \"white\",\n      borderColor: \"white\",\n    },\n    \"& .MuiFilledInput-root\": {\n      backgroundColor: \"white\",\n    },\n\n    color: \"white\",\n    margin: \"40px auto 0 auto\",\n  },\n});\n\nconst Contact = () => {\n  const classes = formStyles();\n\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\",\n  });\n  const [error, setError] = useState(false);\n\n  const handleChange = (e) => {\n    setData({\n      ...data,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Validacion de inputs vacíos\n    if (\n      data.name.trim() === \"\" ||\n      data.email.trim() === \"\" ||\n      data.message.trim() === \"\"\n    ) {\n      setError(true);\n      return;\n    }\n    setError(false);\n    setData({\n      name: \"\",\n      email: \"\",\n      message: \"\",\n    });\n    console.log(\"Datos. cargados...\");\n    console.log(data);\n  };\n\n  return (\n    <div className={classes.root}>\n      <form className={classes.form} onSubmit={handleSubmit}>\n        {error && (\n          <div style={{ textAlign: \"center\" }}>\n            <Error mensaje=\"Todos los campos son obligatorios\" />\n          </div>\n        )}\n        <div style={{ textAlign: \"center\" }}>\n          <h1 className=\"form-material__title\">Contacto</h1>\n        </div>\n        <TextField\n          type=\"text\"\n          id=\"name\"\n          label=\"Nombre *\"\n          margin=\"normal\"\n          variant=\"filled\"\n          autoFocus\n          fullWidth\n          name=\"name\"\n          value={data.name}\n          onChange={handleChange}\n        />\n        <TextField\n          type=\"email\"\n          id=\"email\"\n          label=\"Email *\"\n          margin=\"normal\"\n          variant=\"filled\"\n          fullWidth\n          name=\"email\"\n          value={data.email}\n          onChange={handleChange}\n        />\n        <TextField\n          type=\"text\"\n          id=\"message\"\n          label=\"Mensaje *\"\n          margin=\"normal\"\n          variant=\"filled\"\n          multiline\n          fullWidth\n          name=\"message\"\n          value={data.message}\n          onChange={handleChange}\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          Enviar\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default Contact;\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { fetchInfoPosts } from \"../actions/infoPostAction\";\nimport { useParams } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  root: {\n    margin: \"40px auto 0 auto\",\n    maxWidth: \"500px\",\n    color: \"#f7eaea\",\n    padding: \"0 15px 80px 15px\",\n  },\n  header: {\n    \"& .header__details\": {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"flex-end\",\n    },\n    marginBottom: \"10px\",\n    \"& .header__details-social-item\": {\n      marginRight: \"10px\",\n    },\n  },\n  image: {\n    \"& .image__img\": {\n      width: \"100%\",\n    },\n  },\n  content: {\n    fontSize: \"18px\",\n    \"& .content__subtitle\": {\n      marginTop: \"40px\",\n    },\n  },\n});\n\nconst PostPage = ({ dispatch, info, loading, hasErrors }) => {\n  const classes = useStyles();\n  const { name } = useParams();\n  const { height, weight, order, sprites } = info;\n  console.log(info);\n  let values = [];\n\n  for (var key in origin) {\n    values.push(origin[key]);\n  }\n\n  \n\n  const style = {\n    color: \"white\",\n    fontSize: \"2rem\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  };\n\n  useEffect(() => {\n    console.log(name)\n    dispatch(fetchInfoPosts(name));\n  }, [dispatch, name]);\n\n  const renderInfoPosts = () => {\n    if (loading) return <p style={style}>Cargando información...</p>;\n    if (hasErrors) return <p style={style}>Posts no disponibles...</p>;\n    const image = sprites && sprites.front_default;\n    return (\n      <div className={classes.root}>\n        <div className={classes.header}>\n          <div className=\"header__title\">\n            <h1>{name}</h1>\n          </div>\n          \n        </div>\n        <div className={classes.image}>\n          <img className=\"image__img\" src={image} alt=\"\" />\n        </div>\n        <div className={classes.content}>\n          <p>Height: {height}</p>\n          <p>Weight: {weight}</p>\n          <p>Order: {order || \"N/A\"}</p>\n          \n          \n          \n        </div>\n      </div>\n    );\n  };\n\n  return renderInfoPosts();\n};\nconst mapStateToProps = (state) => ({\n  loading: state.info.loading,\n  info: state.info.info,\n  hasErrors: state.info.hasErrors,\n});\n\nexport default connect(mapStateToProps)(PostPage);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    margin: \"40px auto 0 auto\",\n    width: \"60%\",\n    color: \"white\",\n    fontSize: \"3rem\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"70vh\",\n  },\n});\n\nconst Error404 = () => {\n  const classes = useStyles();\n\n  return <div className={classes.root}>ERROR 404</div>;\n};\n\nexport default Error404;\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport Navbar from \"./components/Navbar\";\nimport theme from \"./components/theme\";\nimport BodyPage from \"./pages/BodyPage\";\nimport Contact from \"./components/Contact\";\nimport PostPage from \"./pages/PostPage\";\nimport Error404 from \"./components/Error404\";\nimport { fetchPostsByName } from \"./actions/postsAction\";\nimport { connect } from \"react-redux\";\n\n\nfunction App({dispatch}) {\n  const [search, setSearch] = useState(\"\");\n\n  // Tomo el valor del input\n  const handleChange = (e) => {\n    setSearch(e.target.value)\n    dispatch(fetchPostsByName(e.target.value))\n  };\n\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <Navbar handleChange={handleChange} search={search} />\n        <Switch>\n          <Route exact path=\"/\" children={<BodyPage search={search} />} />\n          <Route\n            exact\n            path=\"/hooks-redux-posts/\"\n            children={<BodyPage search={search} />}\n          />\n          <Route exact path=\"/contact\" children={<Contact />} />\n          <Route exact path=\"/:name\" children={<PostPage />} />\n          <Route component={Error404} />\n        </Switch>\n      </ThemeProvider>\n    </Router>\n  );\n}\n\n\nexport default connect()(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport rootReducer from \"./reducers\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  // La \"store\" tiene los estados(reducers) y las \"actions\"\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}